plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.google.cloud.tools.jib' version '3.3.1'
    id 'pmd'
    id 'jacoco'
    id 'checkstyle'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

jacoco {
    toolVersion = "0.8.12"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'org.springdoc:springdoc-openapi-starter-common:2.3.0'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation 'ch.obermuhlner:big-math:1.3.0'

    implementation 'org.flywaydb:flyway-core'

    implementation 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    runtimeOnly 'org.postgresql:postgresql'
}

testing {
    suites {
        unit(JvmTestSuite) {
            sources { java { srcDirs = ['src/test/unit/java'] } resources { srcDirs = ['src/test/unit/resources'] } }
            dependencies {
                implementation project()
                implementation 'org.springframework.boot:spring-boot-starter-test'
                implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

                implementation 'org.junit.jupiter:junit-jupiter-params:5.10.0'

                implementation 'org.projectlombok:lombok:1.18.32'
                annotationProcessor 'org.projectlombok:lombok:1.18.32'
            }
        }
        integration(JvmTestSuite) {
            sources { java { srcDirs = ['src/test/integration/java'] } resources { srcDirs = ['src/test/integration/resources'] } }
            dependencies {
                implementation project()

                implementation 'org.springframework.boot:spring-boot-starter-test'
                implementation 'org.springframework.boot:spring-boot-starter-web'
                implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

                implementation 'org.testcontainers:postgresql:1.19.0'
                implementation 'org.testcontainers:mockserver:1.19.0'
                implementation 'org.testcontainers:junit-jupiter:1.19.0'

                implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.0'

                implementation 'org.projectlombok:lombok:1.18.32'
                annotationProcessor 'org.projectlombok:lombok:1.18.32'
            }
        }
        end2end(JvmTestSuite) {
            sources { java { srcDirs = ['src/test/end2end/java'] } resources { srcDirs = ['src/test/end2end/resources'] } }
            dependencies {
                implementation project()

                implementation 'org.springframework.boot:spring-boot-starter-test'

                implementation 'org.testcontainers:junit-jupiter:1.19.0'

                implementation "org.projectlombok:lombok:1.18.32"
                annotationProcessor "org.projectlombok:lombok:1.18.32"
            }
        }
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required.set(true)
        html.required.set(true)
        html.outputLocation.set(layout.buildDirectory.dir("jacocoHtml"))
    }
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

tasks.named('integration') {
    finalizedBy jacocoTestReport
}

tasks.named('end2end') {
    dependsOn jibDockerBuild
    finalizedBy jacocoTestReport
}

jib {
    to {
        image = "${repository}/${serviceName}"
    }
    from {
        image = "eclipse-temurin:17.0.6_10-jre-alpine"
    }
}